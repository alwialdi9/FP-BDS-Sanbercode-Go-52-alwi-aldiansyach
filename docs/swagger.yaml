definitions:
  controllers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.MenuParams:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: string
    type: object
  controllers.MenuRestaurantInput:
    properties:
      menus:
        items:
          $ref: '#/definitions/controllers.MenuParams'
        type: array
      restaurant_id:
        type: string
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.RestaurantInput:
    properties:
      city:
        type: string
      name:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /create/menus:
    post:
      consumes:
      - application/json
      description: Add menu by id Restaurant
      parameters:
      - description: the body to create a menu restaurant
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.MenuRestaurantInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Create Menus
      tags:
      - accounts
  /login:
    post:
      consumes:
      - application/json
      description: Logging to get jwt token
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login User
      tags:
      - Auth
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
  /restaurant/create:
    post:
      consumes:
      - application/json
      description: Create Restaurant
      parameters:
      - description: the body to create a restaurant
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RestaurantInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Create data Restaurant
      tags:
      - restaurant
swagger: "2.0"
